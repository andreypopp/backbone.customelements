// Generated by CoffeeScript 1.6.2
var defaultOptions, extend;

extend = require('underscore').extend;

defaultOptions = {
  proto: HTMLElement.prototype
};

exports.register = function(elementName, viewClass, options) {
  var proto;

  options = extend({}, defaultOptions, options);
  proto = Object.create(options.proto);
  proto.viewClass = viewClass;
  proto.readyCallback = function() {
    var attribute, _i, _len, _ref;

    options = {};
    _ref = this.attributes;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      attribute = _ref[_i];
      options[attribute.name] = attribute.value;
    }
    options.el = this;
    this.view = new viewClass(options);
    return this.view.render();
  };
  if (viewClass.prototype.onEnterDOM != null) {
    proto.insertedCallback = function() {
      var _base;

      return typeof (_base = this.view).onEnterDOM === "function" ? _base.onEnterDOM() : void 0;
    };
  }
  if (viewClass.prototype.onLeaveDOM != null) {
    proto.removedCallback = function() {
      var _base;

      return typeof (_base = this.view).onLeaveDOM === "function" ? _base.onLeaveDOM() : void 0;
    };
  }
  proto.attributeChangedCallback = function(attrName) {
    return this.view.trigger("change:" + attrName);
  };
  return document.register(elementName, {
    prototype: proto
  });
};
